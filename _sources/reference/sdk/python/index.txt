:title: Python API

Python API
==========

Tutum provides a REST HTTP API (see :ref:`api-ref`). In order to facilitate access to this API, we have built an
open source library for Python which makes it very easy to deploy and manage your applications in Tutum.

.. contents::
    :local:


Authentication
--------------

To authenticate to Tutum's API you need an ApiKey. To obtain it, see :ref:`api-auth-ref`.

Once you have your ApiKey, you can do use it with this library in a few ways:

* Set the environment variables ``TUTUM_USER`` and ``TUTUM_APIKEY``:

.. sourcecode:: bash

    export TUTUM_USER=username
    export TUTUM_APIKEY=apikey

* Manually set it in your Python initialization code:

.. sourcecode:: python

    import tutum
    tutum.user = "username"
    tutum.apikey = "apikey"

* Store it in a configuration file in ``~/.tutum``:

.. sourcecode:: ini

    [auth]
    user = "username"
    apikey = "apikey"


Errors
------

Errors in the HTTP API will be returned with status codes in the 4xx and 5xx ranges.
The library will detect this and raise a ``TutumServerError`` with the error message, which should be handled by
your application accordingly.


Applications
------------

Operations with applications are wrapped in the object ``Application``. An application is the basic component used
at Tutum, and is composed of one or more containers.


The application object
^^^^^^^^^^^^^^^^^^^^^^

The application object will reflect all the attributes returned by the HTTP API. See :ref:`api-application-ref` for
a full list of attributes.


List all applications
^^^^^^^^^^^^^^^^^^^^^

Returns a list of all applications in the account.

**Example**

.. sourcecode:: python

    >>> import tutum
    >>> tutum.Application.list()
    [<tutum.api.application.Application object at 0x10701ca90>, <tutum.api.application.Application object at 0x10701ca91>]


Get one application by UUID
^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns an application by its unique identified (UUID). Attributes of the object will be the attributes returned by the HTTP API.

**Example**

.. sourcecode:: python

    >>> import tutum
    >>> tutum.Application.fetch("fee900c6-97da-46b3-a21c-e2b50ed07015")
    <tutum.api.application.Application object at 0x106c45c10>


Create and launch a new application
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns an application by its unique identified (UUID). Attributes of the object will be the attributes returned by the HTTP API.

**Example**

.. sourcecode:: python

    >>> import tutum
    >>> tutum.Application.fetch("fee900c6-97da-46b3-a21c-e2b50ed07015")
    <tutum.api.application.Application object at 0x106c45c10>

